stage('dev') {
    node{
        checkout scm

        openshift.withProject( "todo-app-dev" ) {
            def buildTemplate = openshift.process("-f infra/yml/s2i-todo-app-build-template.yml")
            openshift.apply(buildTemplate)

            openshift.startBuild("todo-app", "--wait=true")

            def deploymentTemplate = openshift.process("-f infra/yml/todo-app-deployment-template.yml",
                    "-p", "URL=todo-app-dev.192.168.99.101.nip.io")
            openshift.apply(deploymentTemplate)

            openshift.selector("dc/todo-app").rollout().latest()
            openshift.selector("dc/todo-app").rollout().status("--watch=true")

            openshift.tag("todo-app-dev/todo-app:latest todo-app-int/todo-app:latest")
        }
    }
}


node{
    checkout scm
    openshift.withProject( "todo-app-int" ) {

        stage('build-e2e-test-containers'){
            buildE2EContainer('check-layout','e2e/layout')
            buildE2EContainer('check-life-cycle','e2e/lifeCycle')
        }

        stage('deploy-to-int'){
            def deploymentTemplate = openshift.process("-f infra/yml/todo-app-deployment-template.yml",
                    "-p", "URL=todo-app-int.192.168.99.101.nip.io")
            openshift.apply(deploymentTemplate)

            openshift.selector("dc/todo-app").rollout().latest()
            openshift.selector("dc/todo-app").rollout().status("--watch=true")
        }

        stage('run-e2e-tests'){
            startE2ETest('check-layout')
            startE2ETest('check-life-cycle')
            waitForTest('check-layout')
            waitForTest('check-life-cycle')
        }

        stage('pre-production'){
            input "Deploy to production?"

            openshift.tag("todo-app-int/todo-app:latest todo-app-prod/todo-app:latest")
        }
    }
}



stage('prod') {
    node{
        openshift.withProject( "todo-app-prod" ) {
            def deploymentTemplate = openshift.process("-f infra/yml/todo-app-deployment-template.yml")
            openshift.apply(deploymentTemplate)

            openshift.selector("dc/todo-app").rollout().latest()
            openshift.selector("dc/todo-app").rollout().status("--watch=true")
        }
    }
}


private void buildE2EContainer(def buildName, def contextDir) {
    def buildTemplate = openshift.process("-f infra/yml/s2i-sakuli-build-template.yml",
            "-p", "IMAGE=" + buildName,
            "-p", "TESTSUITE_REPOSITORY_URL=http://gogs.192.168.99.101.nip.io/sven/todo-app.git",
            "-p", "TESTSUITE_CONTEXT_DIR="+ contextDir)
    openshift.apply(buildTemplate)
    openshift.startBuild(buildName, "--wait=true")
}

private void startE2ETest(def testName) {
    openshift.run(testName,
            "--image=172.30.1.1:5000/todo-app-int/"+ testName + ":latest",
            "--attach=true",
            "--rm",
            "--restart=Never",
            "-l application="+testName)
}

private void waitForTest(def testName){

}